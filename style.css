* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
    font-family: monospace;
}

body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-color: rgb(4, 77, 101);
}

.container {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
    gap: 30px;
    background: rgb(8, 109, 142);
    padding: 40px 60px;
    border-radius: 10px;
}

h2 {
    color: white;
    font-size: 3rem;
    text-transform: uppercase;
    letter-spacing: 0.1em;
}

.reset {
    cursor: pointer;
    padding: 10px 20px;
    text-transform: uppercase;
    color: rgb(228, 59, 16);
    background: white;
    font-size: 1.5em;
    border-radius: 10px;
    letter-spacing: 0.1em;
    transition: 0.5s;
    font-weight: bold;
    border: none;
}

.reset:focus {
    color: white;
    background: rgb(228, 59, 16);
    transform: scale(1,1);
}

.game {
    width: 550px;
    height: 550px;
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    /* border: 5px solid white; */
    border-radius: 10px;
    transform-style: preserve-3d;
    perspective: 500px;
}

.item {
    position: relative;
    width: 100px;
    height: 100px;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 3em;
    background: white;
    border-radius: 25px;
    transform: rotateY(180deg);
    transition: 0.25s;
    transition: transform 0.5s ease, background 0.5s ease;
    /* Add a hover effect for flipped cards */
    cursor: pointer;
}

.item:hover:not(.boxOpen):not(.boxMatch) {
    background: rgb(230, 230, 230); /* Subtle change on hover */
}

.item.boxOpen {
    transform: rotateY(0deg);
}

.item::after {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 25px;
    border: 3px solid white;
    background: rgb(12, 169, 221);
    /* opacity: 0.5; */
    transition: 0.25s;
    transform: rotate(0deg);
    backface-visibility: hidden;
}

.boxOpen:after {
    transform: rotateY(180deg);
    opacity: 0;
}

/* Matched box styles */
.boxMatch:after {
    /* Remove transform to prevent unnecessary rotation */
    transform: none;
    opacity: 0;
}

/* Additional styles for boxMatch to stay in its opened state */
.boxMatch {
    transform: rotateY(0deg); /* Ensure it stays in the open state */
    background: rgb(54, 218, 54); /* Matched box color */
    color: white; /* Ensure the emoji is visible */
    transform: scale(1); /* Optional: Add a slight pop effect */
    transition: background 0.3s ease, transform 0.3s ease;
}